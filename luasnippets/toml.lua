return {
    s({ trig = "pyright", name = "Pyright config.", dscr = "A strict Pyright configuration." }, {
        t({
            "[tool.pyright]",
            "reportPropertyTypeMismatch = true",
            'reportImportCycles = "warning"',
            'reportUnusedFunction = "warning"',
            'reportDuplicateImport = "warning"',
            'reportPrivateUsage = "warning"',
            'reportTypeCommentUsage = "warning"',
            'reportConstantRedefinition = "error"',
            'reportDeprecated = "warning"',
            'reportIncompatibleMethodOverride = "warning"',
            'reportIncompatibleVariableOverride = "error"',
            'reportInconsistentConstructor = "error"',
            'reportOverlappingOverload = "error"',
            'reportMissingSuperCall = "error"',
            'reportUnititializedInstanceVariable = "error"',
            'reportUnknownParameterType = "warning"',
            'reportUnknownArgumentType = "warning"',
            'reportUnknownLambdaType = "warning"',
            'reportUnknownVariableType = "warning"',
            'reportUnknownMemberType = "warning"',
            'reportMissingParameterType = "error"',
            'reportMissingTypeArgument = "warning"',
            'reportUnnecessaryIsInstance = "warning"',
            'reportUnnecessaryCast = "warning"',
            'reportUnnecessaryComparison = "warning"',
            'reportUnnecessaryContains = "warning"',
            'reportAssertAlwaysTrue = "warning"',
            'reportSelfClsParameterName = "error"',
            'reportImplicitStringConcatenation = "warning"',
            'reportUnusedExpression = "warning"',
            'reportUnnecessaryTypeIgnoreComment = "warning"',
            'reportMatchNotExhaustive = "error"',
            'reportShadowedImports = "error"',
        }),
    }),
}, {}
